<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.cmclinnovations</groupId>
    <artifactId>FileServer</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <!-- Project properties -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- Set default values used in the multipart-config of the servlet in the web.xml file-->
        <max-file-size>104857600</max-file-size>
        <max-request-size>1073741824</max-request-size>
        <file-size-threshold>0</file-size-threshold>
    </properties>

    <!-- Parent POM -->
    <parent>
        <groupId>uk.ac.cam.cares.jps</groupId>
        <artifactId>jps-parent-pom</artifactId>
        <version>2.1.0</version>
    </parent>

    <!-- Profiles are used to switch between building for development and production
    environments. Use "-P profile-id" within an mvn command to build with a profile -->
    <profiles>
        <!-- This profile should be used for development builds. -->
        <profile>
            <id>dev-profile</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <!-- Set property to download development logging config -->
                <log.artifact>java-logging-dev</log.artifact>
            </properties>
        </profile>

        <!-- This profile should be used for production builds. -->
        <profile>
            <id>prod-profile</id>
            <properties>
                <!-- Set property to download production logging config -->
                <log.artifact>java-logging-prod</log.artifact>
            </properties>
        </profile>

        <!-- Profiles to override the "multipart-config" settings if the environment variables are specified -->
        <profile>
            <id>MAX_FILE_SIZE-specified</id>
            <activation>
                <property>
                    <name>env.MAX_FILE_SIZE</name>
                    <value></value>
                </property>
            </activation>
            <properties>
                <max-file-size>${env.MAX_FILE_SIZE}</max-file-size>
            </properties>
        </profile>
        <profile>
            <id>MAX_REQUEST_SIZE-specified</id>
            <activation>
                <property>
                    <name>env.MAX_REQUEST_SIZE</name>
                    <value></value>
                </property>
            </activation>
            <properties>
                <max-request-size>${env.MAX_REQUEST_SIZE}</max-request-size>
            </properties>
        </profile>
        <profile>
            <id>FILE_SIZE_THRESHOLD-specified</id>
            <activation>
                <property>
                    <name>env.FILE_SIZE_THRESHOLD</name>
                    <value></value>
                </property>
            </activation>
            <properties>
                <file-size-threshold>${env.FILE_SIZE_THRESHOLD}</file-size-threshold>
            </properties>
        </profile>
    </profiles>

    <build>
        <plugins>

            <!-- Compile and build with Java 11 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>

            <!-- Allows maven executions -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
            </plugin>

            <!-- Used to execute unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- JUnit 5 requires Surefire version 2.22.0 or higher -->
                <version>2.22.0</version>
            </plugin>

            <!-- Used to build into a WAR file and ensures everything in ./WEB-INF
            gets copied into the final WAR file's internal WEB-INF directory. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <!-- Ensure that the web.xml file has the property references replaced with values -->
                            <filtering>true</filtering>
                            <directory>${basedir}/WEB-INF</directory>
                            <includes>
                                <include>**/web.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
                <!-- Version, configuration, and executions should be pulled from the
                parent POM unless overridden here. -->
            </plugin>

            <!-- Downloads and extracts ZIP archives from Maven repository -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <!-- Version, configuration, and executions should be pulled from the
                parent POM unless overridden here. -->
            </plugin>

        </plugins>
    </build>

    <!-- Dependencies -->
    <dependencies>

        <!-- Java servlet API, version pulled from parent -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <!-- Logging, versions pulled from parent -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.8.0</version>
            <type>jar</type>
        </dependency>
    </dependencies>
</project>
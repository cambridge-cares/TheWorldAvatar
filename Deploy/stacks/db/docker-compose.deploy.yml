# This configuration file should include all docker-compose options required to *deploy containers*
# for services in the 'db' stack, with the exception of the 'ports' node which should be set in
# docker-compose.deploy.live.yml and docker-compose.deploy.test.yml (see those files for details).
#
# Options used to generate an image from source, such as the 'build' node and 'labels' node should
# be set in docker-compose.build.yml.
#
# When adding a new service, please copy the configuration for an existing service, then modify the 
# service name, the 'image' tag (retaining 'docker.cmclinnovations.com') and the 'container_name'
# node (retaining '${CONTAINER_NAME_SUFFIX}').
# =================================================================================================

version: "3.8"


services:

  # Blazegraph
  blazegraph:
    image: docker.cmclinnovations.com/blazegraph:1.0.0-SNAPSHOT
    container_name: "blazegraph${CONTAINER_NAME_SUFFIX}"
    environment:
      BLAZEGRAPH_PASSWORD_FILE: /run/secrets/blazegraph_password
      LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
    pull_policy: if_not_present
    restart: unless-stopped
    # Add a secret to set the password for BASIC authentication
    secrets:
      - blazegraph_password
    volumes:
      - blazegraph_data:/data

  # Blazegraph geo
  blazegraph-geo:
    image: docker.cmclinnovations.com/blazegraph_geo:1.0.0-SNAPSHOT
    container_name: "blazegraph_geo${CONTAINER_NAME_SUFFIX}"
    environment:
      LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
    pull_policy: if_not_present
    restart: unless-stopped
    volumes:
      - blazegraph_geo_data:/data

  # Postgres
  postgres:
    image: docker.cmclinnovations.com/postgres:13.3-alpine
    container_name: "postgres${CONTAINER_NAME_SUFFIX}"
    pull_policy: if_not_present
    environment:
      LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    restart: unless-stopped
    secrets:
      - postgres_password
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # RDF4J
  rdf4j:
    image: docker.cmclinnovations.com/rdf4j:1.0.0-SNAPSHOT
    container_name: "rdf4j${CONTAINER_NAME_SUFFIX}"
    environment:
      LOG4J_FORMAT_MSG_NO_LOOKUPS: "true"
      RDF4J_ADMIN_PASSWORD_FILE: /run/secrets/rdf4j_admin_password
      RDF4J_USER_PASSWORD_FILE: /run/secrets/rdf4j_user_password
    pull_policy: if_not_present
    restart: unless-stopped
    # Add secrets to set BASIC authentication passwords for both the workbench and server
    secrets:
      - rdf4j_admin_password
      - rdf4j_user_password
    volumes:
      - rdf4j_data:/var/rdf4j
      - rdf4j_logs:/usr/local/tomcat/logs


# The default network name is set using a docker-compose environment variable.
# Please don't modify the contents of the 'networks' node below.
networks:
  default:
    name: ${NETWORK_NAME}


# Secrets used to set runtime passwords
secrets:
  blazegraph_password:
    file: blazegraph/secrets/blazegraph_password  
  postgres_password:
    file: postgres/secrets/postgres_password
  rdf4j_admin_password:
    file: rdf4j/secrets/rdf4j_admin_password
  rdf4j_user_password:
    file: rdf4j/secrets/rdf4j_user_password


# Volumes to handle triplestore data and logging
volumes:
  blazegraph_data:
  blazegraph_geo_data:
  postgres_data:
  rdf4j_data:
  rdf4j_logs:
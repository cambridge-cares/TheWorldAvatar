{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "build-manager",
            "command": "./stack.sh",
            "linux": {
                "command": "./stack.sh"
            },
            "args": [
                "build"
            ],
            "options": {
                "cwd": "${cwd}/../stack-manager",
                "shell": {
                    "executable": "bash"
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "build-data-uploader",
            "command": "./stack.sh",
            "linux": {
                "command": "./stack.sh"
            },
            "args": [
                "build"
            ],
            "options": {
                "cwd": "${cwd}/../stack-data-uploader",
                "shell": {
                    "executable": "bash"
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "build-dependents",
            "dependsOn": [
                "build-manager",
                "build-data-uploader"
            ],
            "dependsOrder": "parallel",
            "group": {
                "kind": "build",
                "isDefault": false
            }
        },
        {
            "type": "shell",
            "label": "compose-build",
            "command": "./stack.sh",
            "linux": {
                "command": "./stack.sh"
            },
            "args": [
                "build"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "bash"
                    }
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "build-all",
            "dependsOn": [
                "compose-build",
                "build-dependents"
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "type": "shell",
            "label": "compose-deploy-internal",
            "linux": {
                "command": "./stack.sh"
            },
            "command": "./stack.sh",
            "args": [
                "start",
                "${input:stackName}",
                "--debug-port",
                "${input:debug.port}"
            ],
            "options": {
                "shell": {
                    "executable": "bash"
                }
            }
        },
        {
            "type": "shell",
            "label": "compose-deploy",
            "command": "sleep 1",
            "linux": {
                "command": "./stack.sh"
            },
            "dependsOn": [
                "compose-deploy-internal"
            ],
            "windows": {
                "options": {
                    "shell": {
                        "executable": "powershell"
                    }
                }
            }
        },
        {
            "type": "shell",
            "label": "compose-build-deploy",
            "dependsOn": [
                "compose-build",
                "compose-deploy"
            ],
            "dependsOrder": "sequence"
        }
    ],
    "inputs": [
        {
            "id": "stackName",
            "type": "promptString",
            "description": "Name your stack.",
            "default": "TEST-STACK"
        },
        {
            "id": "debug.port",
            "type": "command",
            // Get the last debug port from the cache file
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ./stack.sh ports read",
                "useFirstResult": true
            }
        }
    ]
}
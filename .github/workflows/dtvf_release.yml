#
# Runs actions related to a new release (i.e. merged PR to main) of the
# Digital Twin Visualisation Framework (DTVF).
#
# Author: Michael Hillman (mdhillman<@>cmclinnovations.com)
#
name: Release the DTVF


# Trigger this workflow during pushes to the 'main' branch, and
# ONLY when files within the DTVF source code are changed.
on:
  push:
    branches:
      - main
    paths:
      - web/digital-twin-vis-framework/library/**


# Job definitions
jobs:

  # Make a release on the repo
  make-release:
  
    # Run on latest version of Ubuntu
    runs-on: ubuntu-latest

    # Action steps
    steps:
    
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        
      # Compile the DTVF and ZIP results
      - name: Compile the DTVF
        id: compiler
        working-directory: ./web/digital-twin-vis-framework/library
        run: |
          docker-compose -f docker/docker-compose.yml up compile
          zip -r $HOME/dtvf.zip output/
          echo zip=$HOME/dtvf.zip >> $GITHUB_ENV
          
      # Get the version of the DTVF
      - name: Get DTVF version
        id: versioner
        run: |
          echo version=$(cat web/digital-twin-vis-framework/VERSION) >> $GITHUB_ENV
        
      # Generate the release body text
      - name: Generate release text
        id: generate-text
        working-directory: ./
        run: |
          chmod +x ./.github/scripts/dtvf/make-release-body.sh
          ./.github/scripts/dtvf/make-release-body.sh > $HOME/body.md
          echo body=$HOME/body.md >> $GITHUB_ENV
        
      # Make a release on the main branch
      - name: Make release
        uses: ncipollo/release-action@v1
        with:
          name: "dtvf-${{ env.version }}"
          tag: "dtvf-${{ env.version }}"
          commit: "main"
          bodyFile: "${{ env.body }}"
          artifacts: "${{ env.zip }}"
       
      # Setup Python installation
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
          
      # Generate the release email content
      - name: Generate release email
        id: generate-email
        working-directory: ./
        run: |
          pip install markdown
          python ./.github/scripts/dtvf/make-release-email.py
          echo email=$HOME/email.html >> $GITHUB_ENV
      
      # Send a notification email
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: mail.cmclinnovations.com
          server_port: 465
          secure: true
          username: ${{secrets.CMCL_MAIL_USERNAME}}
          password: ${{secrets.CMCL_MAIL_PASSWORD}}
          subject: "New TWA release: DTVF ${{ env.version }}"
          to: cares-twa@lists.cam.ac.uk,all@cmclinnovations.com
          from: Automated TWA action
          html_body: "file://${{ env.email }}"

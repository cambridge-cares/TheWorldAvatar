#
# This workflow contains a job that builds and pushes the Docker image
# for the FeatureInfoAgent, running its JUnit tests in the process.
#
# Note this workflow will use the automatically generated GITHUB_TOKEN
# and the username of the account that triggered it.
#
# Also note that the first time a Docker image is pushed by this workflow,
# it will be uploaded as a private image. You'll have to manually make
# it public using the controls on the GitHub website.
#
# Author: Michael Hillman (mdhillman<@>cmclinnovations.com)
#
name: Push the FeatureInfoAgent


# Trigger this workflow to run on the main branch
# after a push (i.e. a finished PR) and only if the
# agent's files have changed
on:
  push:
    branches:
      - main
    paths:
      - 'Agents/FeatureInfoAgent/**'


# Job definitions
jobs:

  # Single job to build and push the image
  build-and-push-image:
    
    # Run on latest version of Ubuntu
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        
        
      # Write Maven credentials
      - name: Set up Maven credentials
        working-directory: ./Agents/FeatureInfoAgent/credentials
        run: echo "$USERNAME" > repo_username.txt && echo  "$PASSWORD" > repo_password.txt
        env:
          USERNAME: ${{github.actor}}
          PASSWORD: ${{github.token}}
          
        
      # Create & boot a builder using the default docker-container driver.
      - name: Set up Docker build
        uses: docker/setup-buildx-action@v2
        
      
      # Extracts the image tag from the compose file
      - name: Extract image tag
        id: extractor
        uses: mikefarah/yq@master
        with:
          cmd: yq '.services.feature-info-agent.image' './Agents/FeatureInfoAgent/docker-compose.yml'
        
        
      # Get and parse the version from the POM
      - name: Parse the version number
        working-directory: ./Agents/FeatureInfoAgent
        run: |
          sudo apt install -y libxml2-utils
          VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" ./code/pom.xml)
          echo versionFull=$VERSION >> $GITHUB_ENV
          echo versionMajor=$(echo $VERSION | cut -d. -f1) >> $GITHUB_ENV
          echo versionMinor=$(echo $VERSION | cut -d. -f1).$(echo $VERSION | cut -d. -f2) >> $GITHUB_ENV
        
          
      # Login to Docker image registry
      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{github.token}}
          
          
      # Build and push the agent's Docker image
      - name: Build and push image (inc. unit tests)
        uses: docker/build-push-action@v3
        with:
          push: true
          context: ./Agents/FeatureInfoAgent
          tags: |
            ghcr.io/cambridge-cares/feature-info-agent:latest
            ghcr.io/cambridge-cares/feature-info-agent:${{ env.versionFull }}
            ghcr.io/cambridge-cares/feature-info-agent:${{ env.versionMajor }}
            ghcr.io/cambridge-cares/feature-info-agent:${{ env.versionMinor }}
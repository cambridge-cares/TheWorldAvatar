package uk.ac.cam.cares.jps.agent.dashboard.json;

import uk.ac.cam.cares.jps.agent.dashboard.json.panel.PanelModel;
import uk.ac.cam.cares.jps.agent.dashboard.json.templating.TemplatingModel;

import java.util.List;
import java.util.Map;

/**
 * A Java representation of a JSON-like model that encapsulates and enforces information about syntax specific to Grafana dashboard.
 *
 * @author qhouyee
 */
public class GrafanaModel {
    private String dashboardId;
    private String dashboardUid;
    private boolean overwrite;
    private final String dashboardTitle;
    private final String dashboardRefreshRate;
    private final String comment;
    private final String templatingSyntax;
    private final String panelSyntax;

    /**
     * Constructor that provides default settings to set up a new dashboard. The default refresh rate is 20seconds.
     * New dashboard ID and UID will be generated in this process.
     *
     * @param title                 The title of the dashboard.
     * @param databaseConnectionMap A map linking each database to its connection ID.
     * @param timeSeries            A map of all assets and rooms mapped to their time series.
     */
    public GrafanaModel(String title, Map<String, String> databaseConnectionMap, Map<String, Map<String, List<String[]>>> timeSeries) {
        // Grafana has enforced a default comment for the first version, which cannot be changed
        this(title, null, "null", "20s", "Initialised dashboard", databaseConnectionMap, timeSeries);
    }

    /**
     * Basic Constructor that provides customised settings.
     *
     * @param title                 The title of the dashboard.
     * @param dashboardId           The dashboard ID generated by Grafana. For creating new dashboards, ONLY pass null value. For updating an existing dashboard, users MUST pass the corresponding ID as an Integer.
     * @param dashboardUid          Optional unique identifier when creating a dashboard. Pass null as a String to generate a new uid.
     * @param refreshRate           The refresh rate of the real-time dashboard. Sample values: 5s, 1m, 1h, 1d.
     * @param comment               A comment for version control purposes.
     * @param databaseConnectionMap A map linking each database to its connection ID.
     * @param timeSeries            A map of all assets and rooms mapped to their time series.
     */
    public GrafanaModel(String title, Integer dashboardId, String dashboardUid, String refreshRate, String comment, Map<String, String> databaseConnectionMap, Map<String, Map<String, List<String[]>>> timeSeries) {
        this.dashboardTitle = title;
        // If setting up a new dashboard, please pass null as a parameter to generate the ID. If updating an existing dashboard, please pass the original id
        this.dashboardId = dashboardId == null ? "null" : dashboardId.toString();
        // If setting a customised dashboard UID, it must be enclosed with double quotes and a backslash eg \"
        this.dashboardUid = dashboardUid.equals("null") ? dashboardUid : "\"" + dashboardUid + "\"";
        this.overwrite = false;
        this.dashboardRefreshRate = refreshRate;
        this.comment = comment;
        // Construct the templating syntax from the model
        this.templatingSyntax = new TemplatingModel(databaseConnectionMap, timeSeries).construct();
        this.panelSyntax = new PanelModel(databaseConnectionMap, timeSeries).construct();
    }

    /**
     * Set the id configuration if the dashboard already exists.
     *
     * @param id  The id of the dashboard.
     * @param uid The uid of the dashboard generated by Grafana.
     */
    protected void setExistingIds(int id, String uid) {
        this.dashboardId = String.valueOf(id);
        this.dashboardUid = "\"" + uid + "\"";
        this.overwrite = true;
    }

    /**
     * Construct the JSON model as a String.
     *
     * @return The JSON model syntax as a String.
     */
    protected String construct() {
        return "{\"dashboard\": {" +
                // generate new id and uid using null
                "\"id\":" + this.dashboardId + "," +
                "\"uid\":" + this.dashboardUid + "," +
                // The dashboard title
                "\"title\": \"" + this.dashboardTitle + "\"," +
                // Templating
                "\"templating\": " + this.templatingSyntax + "," +
                // Panel
                "\"panels\": [" + this.panelSyntax + "]," +
                // Disable any editing by non-admin users
                "\"editable\": false," +
                "\"timezone\": \"browser\"," +
                // Default view - time frame
                "\"time\": {\"from\": \"now-3h\", \"to\": \"now\"}," +
                "\"refresh\": \"" + this.dashboardRefreshRate + "\"" +
                "}," +
                // Comments for each update/ version
                "\"message\": \"" + this.comment + "\"," +
                "\"overwrite\": " + this.overwrite + "}";
    }
}

{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "type": "python",
            "name": "Debug (Flask)",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port}",
            "preLaunchTask": "compose-deploy",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/agent",
                    "remoteRoot": "/app/agent"
                }
            ]
        },
        {
            "type": "python",
            "name": "Build and Debug (Flask)",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port}",
            "preLaunchTask": "compose-build-deploy",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/agent",
                    "remoteRoot": "/app/agent"
                }
            ]
        },
        {
            "type": "python",
            "name": "Reattach and Debug (Flask)",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port.read}",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/agent",
                    "remoteRoot": "/app/agent"
                }
            ]
        },
        {
            "type": "python",
            "name": "Attach and Debug Celery",
            "request": "attach",
            "host": "localhost",
            "port": "5679",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/agent",
                    "remoteRoot": "/app/agent"
                }
            ]
        }
    ],
    "inputs": [
        {
            "id": "debug.port",
            "type": "command",
            // Get the next avaliable debug port and write it to the cache file
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ./stack.sh ports write",
                "useFirstResult": true
            }
        },
        {
            "id": "debug.port.read",
            "type": "command",
            // Get the last debug port from the cache file
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ./stack.sh ports read",
                "useFirstResult": true
            }
        }
    ]
}
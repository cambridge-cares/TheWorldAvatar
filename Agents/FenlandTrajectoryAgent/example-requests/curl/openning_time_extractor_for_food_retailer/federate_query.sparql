PREFIX fh: <http://www.theworldavatar.com/ontology/OntoFHRS/>
PREFIX ies4: <http://ies.data.gov.uk/ontology/ies4#>
PREFIX geo: <http://www.opengis.net/ont/geosparql#>
PREFIX wgs: <http://www.w3.org/2003/01/geo/wgs84_pos#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX osmkey: <https://www.openstreetmap.org/wiki/Key:>

SELECT DISTINCT ?be ?geometry ?wkt ?lat ?long ?openingHours
WHERE {
  # 1) From Trajectory
  BIND("Mo" AS ?weekday)
  BIND("11:34" AS ?timeStr)

  # 2) Match structural opening time from OSM e.g. "Mo-Su 11:00-23:00" or "Mo 07:00-19:00" 
  BIND(CONCAT(".*", ?weekday, "(?:-[A-Za-z]{2})?\\s+([0-9]{2}:[0-9]{2})-([0-9]{2}:[0-9]{2}).*") AS ?pattern)
  ##################################################################
  ## 3)Federate query from Ontop, get valid BusinessEstablishment checked by absolute filter
  ##################################################################
  
  SERVICE <http://host.docker.internal:5007/ontop/ui/sparql> {
    SELECT DISTINCT ?be ?geometry ?wkt ?lat ?long
    WHERE {
      BIND("2023-05-22T11:34:36Z"^^xsd:dateTimeStamp AS ?givenTime)
      BIND(SUBSTR(STR(?givenTime), 1, 4) AS ?timeYear)
      ?be a fh:BusinessEstablishment ;
          geo:hasGeometry ?geometry .
      FILTER(CONTAINS(STR(?geometry), CONCAT("/", ?timeYear)))
      ?geometry geo:asWKT ?wkt .
      OPTIONAL { ?geometry wgs:lat ?lat . }
      OPTIONAL { ?geometry wgs:long ?long . }
      ?startEvent ies4:isStartOf ?be ;
                  ies4:inPeriod ?startPeriod .
      ?startPeriod ies4:iso8601PeriodRepresentation ?startTime .
      ?endEvent ies4:isEndOf ?be ;
                ies4:inPeriod ?endPeriod .
      ?endPeriod ies4:iso8601PeriodRepresentation ?endTime .
      FILTER(?startTime <= ?givenTime && ?endTime >= ?givenTime)
    }
  }

  ##################################################################
  ## 4)From local Blazegraph , extract opening_hours 
  ##################################################################
  OPTIONAL { ?be osmkey:opening_hours ?openingHours . }

  ##################################################################
  ## 5)Althorithm
  ##    -if the opening_hours data is missing, we skip the business establishment
  ##    - if has opening_hoursï¼Œcheck if ?timeStr inside the opening hour
  ##################################################################
  FILTER (
    BOUND(?openingHours) &&
    (
      !regex(?openingHours, ?pattern)
      ||
      (?timeStr < REPLACE(?openingHours, ?pattern, "$1"))
      ||
      (?timeStr > REPLACE(?openingHours, ?pattern, "$2"))
    )
  )
}

{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Python: Debug Flask App",
            "type": "python",
            "request": "launch",
            "module": "flask",
            "env": {
                "FLASK_APP": "${input:agentname}:create_app()",
                "FLASK_ENV": "development",
                "FLASK_DEBUG": "0"
            },
            "args": [
                "run",
                //To ensure proper working of VSCodes debugger:
                //https://flask.palletsprojects.com/en/2.2.x/debugging/#external-debuggers
                "--no-debugger",
                "--no-reload"
            ],
            "jinja": true
        },
        {
            "name": "Python: Debug Flask within Docker",
            "type": "python",
            "request": "attach",
            "connect": {
                "host": "127.0.0.1",
                "port": 5678
            },
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/${input:agentname}/",
                    "remoteRoot": "/app/${input:agentname}/"
                }
            ]
        },
        {
            "name": "Python: Debug dockerised Tests",
            "type": "python",
            "request": "attach",
            "preLaunchTask": "compose-dockerised-test",
            "connect": {
                "host": "127.0.0.1",
                "port": 5678
            },
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/",
                    "remoteRoot": "/app/"
                }
            ]
        },
        {
            "type": "python",
            "name": "Stack: Debug",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port}",
            "preLaunchTask": "compose-deploy",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/${input:agentname}",
                    "remoteRoot": "/app/${input:agentname}"
                }
            ]
        },
        {
            "type": "python",
            "name": "Stack: Build and Debug",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port}",
            "preLaunchTask": "compose-build-deploy",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/${input:agentname}",
                    "remoteRoot": "/app/${input:agentname}"
                }
            ]
        },
        {
            "type": "python",
            "name": "Stack: Update JPSRM and Build and Debug",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port}",
            "preLaunchTask": "update-compose-build-deploy",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/${input:agentname}",
                    "remoteRoot": "/app/${input:agentname}"
                }
            ]
        },
        {
            "type": "python",
            "name": "Stack: Reattach and Debug",
            "request": "attach",
            "host": "localhost",
            "port": "${input:debug.port.read}",
            "pathMappings": [
                {
                    "localRoot": "${workspaceFolder}/${input:agentname}",
                    "remoteRoot": "/app/${input:agentname}"
                }
            ]
        }
    ],
    "inputs": [
        {
            "id": "debug.port",
            "type": "command",
            // Get the next avaliable debug port and write it to the cache file
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ./stack.sh ports write",
                "useFirstResult": true
            }
        },
        {
            "id": "debug.port.read",
            "type": "command",
            // Get the last debug port from the cache file
            "command": "shellCommand.execute",
            "args": {
                "command": "bash ./stack.sh ports read",
                "useFirstResult": true
            }
        },
        {
            "id": "agentname",
            "type": "command",
            // Get agentname (equivalent to agent repository name) from setup.py
            "command": "shellCommand.execute",
            "args": {
            // TODO: Platform specific commands to be revisited at some point
            // Linux (n/a option to be commented out):
            //    "command": "python3 setup.py --name",
            // Windows (n/a option to be commented out): 
                "command": "python setup.py --name",
                "useFirstResult": true
            }
        }
    ]
}